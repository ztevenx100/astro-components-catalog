---
import CodeViewer from '../../util/CodeViewer.astro';

const code = `
<!-- Grid b√°sico -->
<div class="grid grid-cols-3 gap-4">
  <div class="grid-item">Item 1</div>
  <div class="grid-item">Item 2</div>
  <div class="grid-item">Item 3</div>
</div>

<!-- Grid responsivo -->
<div class="grid grid-responsive gap-6">
  <div class="grid-item">Responsive 1</div>
  <div class="grid-item">Responsive 2</div>
  <div class="grid-item">Responsive 3</div>
  <div class="grid-item">Responsive 4</div>
</div>

<!-- Grid auto-fit -->
<div class="grid grid-auto-fit gap-4">
  <div class="grid-item">Auto 1</div>
  <div class="grid-item">Auto 2</div>
  <div class="grid-item">Auto 3</div>
</div>

<!-- Flexbox containers -->
<div class="flex-container flex-center">
  <div class="flex-item">Centrado</div>
</div>

<div class="flex-container flex-between">
  <div class="flex-item">Izquierda</div>
  <div class="flex-item">Derecha</div>
</div>

<style>
/* ===== SISTEMA DE GRILLAS ===== */

/* Grid base */
.grid {
  display: grid;
  width: 100%;
}

/* Columnas espec√≠ficas */
.grid-cols-1 { grid-template-columns: 1fr; }
.grid-cols-2 { grid-template-columns: repeat(2, 1fr); }
.grid-cols-3 { grid-template-columns: repeat(3, 1fr); }
.grid-cols-4 { grid-template-columns: repeat(4, 1fr); }
.grid-cols-6 { grid-template-columns: repeat(6, 1fr); }

/* Grid responsivo */
.grid-responsive {
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
}

/* Grid auto-fit */
.grid-auto-fit {
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
}

/* Gaps */
.gap-2 { gap: 0.5rem; }
.gap-4 { gap: 1rem; }
.gap-6 { gap: 1.5rem; }
.gap-8 { gap: 2rem; }

/* Items */
.grid-item {
  padding: 1rem;
  background: var(--surface-color);
  border: 1px solid var(--border-color);
  border-radius: 8px;
  text-align: center;
  transition: all 0.3s ease;
}

.grid-item:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

/* ===== FLEXBOX CONTAINERS ===== */

.flex-container {
  display: flex;
  width: 100%;
  padding: 1rem;
  background: var(--surface-secondary);
  border-radius: 8px;
  border: 1px solid var(--border-color);
}

.flex-center {
  justify-content: center;
  align-items: center;
}

.flex-between {
  justify-content: space-between;
  align-items: center;
}

.flex-around {
  justify-content: space-around;
  align-items: center;
}

.flex-column {
  flex-direction: column;
  gap: 1rem;
}

.flex-item {
  padding: 0.75rem 1rem;
  background: var(--surface-color);
  border: 1px solid var(--border-color);
  border-radius: 6px;
  text-align: center;
  font-weight: 500;
}

/* Responsive */
@media (max-width: 768px) {
  .grid-cols-3 { grid-template-columns: repeat(2, 1fr); }
  .grid-cols-4 { grid-template-columns: repeat(2, 1fr); }
  .grid-cols-6 { grid-template-columns: repeat(3, 1fr); }
  
  .grid-responsive {
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  }
  
  .flex-between {
    flex-direction: column;
    gap: 1rem;
  }
}

@media (max-width: 480px) {
  .grid-cols-2 { grid-template-columns: 1fr; }
  .grid-cols-3 { grid-template-columns: 1fr; }
  .grid-cols-4 { grid-template-columns: 1fr; }
  .grid-cols-6 { grid-template-columns: repeat(2, 1fr); }
  
  .grid-responsive {
    grid-template-columns: 1fr;
  }
  
  .gap-6 { gap: 1rem; }
  .gap-8 { gap: 1.5rem; }
}
</style>
`;
---

<div class="component-preview">
  <h3>üìê Sistema de Grillas y Flexbox</h3>
  <p>Grillas CSS modernas y contenedores flexibles para layouts responsive y adaptativos.</p>
  
  <div class="demo-container">
    <div class="grids-showcase">
      
      <!-- Grid b√°sico de 3 columnas -->
      <div class="demo-section">
        <h4>üî¢ Grid de 3 Columnas</h4>
        <div class="grid grid-cols-3 gap-4">
          <div class="grid-item">Item 1</div>
          <div class="grid-item">Item 2</div>
          <div class="grid-item">Item 3</div>
        </div>
      </div>

      <!-- Grid responsivo -->
      <div class="demo-section">
        <h4>üì± Grid Responsivo (Auto-fit)</h4>
        <div class="grid grid-responsive gap-6">
          <div class="grid-item">Responsive 1</div>
          <div class="grid-item">Responsive 2</div>
          <div class="grid-item">Responsive 3</div>
          <div class="grid-item">Responsive 4</div>
        </div>
      </div>

      <!-- Grid auto-fit -->
      <div class="demo-section">
        <h4>‚ö° Grid Auto-fit (200px m√≠n)</h4>
        <div class="grid grid-auto-fit gap-4">
          <div class="grid-item">Auto 1</div>
          <div class="grid-item">Auto 2</div>
          <div class="grid-item">Auto 3</div>
          <div class="grid-item">Auto 4</div>
          <div class="grid-item">Auto 5</div>
        </div>
      </div>

      <!-- Flexbox centrado -->
      <div class="demo-section">
        <h4>üéØ Flexbox Centrado</h4>
        <div class="flex-container flex-center">
          <div class="flex-item">Elemento Centrado</div>
        </div>
      </div>

      <!-- Flexbox space-between -->
      <div class="demo-section">
        <h4>‚ÜîÔ∏è Flexbox Space-Between</h4>
        <div class="flex-container flex-between">
          <div class="flex-item">Izquierda</div>
          <div class="flex-item">Centro</div>
          <div class="flex-item">Derecha</div>
        </div>
      </div>

      <!-- Flexbox columna -->
      <div class="demo-section">
        <h4>‚¨áÔ∏è Flexbox Vertical</h4>
        <div class="flex-container flex-column">
          <div class="flex-item">Elemento 1</div>
          <div class="flex-item">Elemento 2</div>
          <div class="flex-item">Elemento 3</div>
        </div>
      </div>

    </div>
  </div>

</div>

<CodeViewer code={code} />

<style>
  .component-preview {
    padding: 2rem;
    border: 1px solid var(--border-color);
    border-radius: 16px;
    background: linear-gradient(135deg, var(--background-color) 0%, var(--surface-color) 100%);
    margin-bottom: 2rem;
  }

  .component-preview h3 {
    margin: 0 0 0.5rem 0;
    color: var(--text-color);
    font-size: 1.6rem;
    font-weight: 700;
    text-align: center;
    background: linear-gradient(135deg, var(--text-color), var(--primary-color));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .component-preview p {
    margin: 0 0 2rem 0;
    color: var(--text-secondary);
    line-height: 1.6;
    text-align: center;
    font-size: 1rem;
  }

  .demo-container {
    display: flex;
    justify-content: center;
    align-items: flex-start;
    margin-bottom: 2rem;
  }

  .grids-showcase {
    width: 100%;
    max-width: 1000px;
    display: flex;
    flex-direction: column;
    gap: 2.5rem;
  }

  .demo-section {
    width: 100%;
  }

  .demo-section h4 {
    margin: 0 0 1rem 0;
    color: var(--text-color);
    font-size: 1.1rem;
    font-weight: 600;
    text-align: center;
  }

  /* Grid system */
  .grid {
    display: grid;
    width: 100%;
  }

  .grid-cols-1 { grid-template-columns: 1fr; }
  .grid-cols-2 { grid-template-columns: repeat(2, 1fr); }
  .grid-cols-3 { grid-template-columns: repeat(3, 1fr); }
  .grid-cols-4 { grid-template-columns: repeat(4, 1fr); }
  .grid-cols-6 { grid-template-columns: repeat(6, 1fr); }

  .grid-responsive {
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  }

  .grid-auto-fit {
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  }

  .gap-2 { gap: 0.5rem; }
  .gap-4 { gap: 1rem; }
  .gap-6 { gap: 1.5rem; }
  .gap-8 { gap: 2rem; }

  .grid-item {
    padding: 1rem;
    background: var(--surface-color);
    border: 1px solid var(--border-color);
    border-radius: 8px;
    text-align: center;
    transition: all 0.3s ease;
    font-weight: 500;
    color: var(--text-color);
  }

  .grid-item:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    border-color: var(--primary-color);
  }

  /* Flexbox containers */
  .flex-container {
    display: flex;
    width: 100%;
    padding: 1rem;
    background: var(--surface-secondary);
    border-radius: 8px;
    border: 1px solid var(--border-color);
    min-height: 60px;
  }

  .flex-center {
    justify-content: center;
    align-items: center;
  }

  .flex-between {
    justify-content: space-between;
    align-items: center;
  }

  .flex-around {
    justify-content: space-around;
    align-items: center;
  }

  .flex-column {
    flex-direction: column;
    gap: 1rem;
    align-items: stretch;
  }

  .flex-item {
    padding: 0.75rem 1rem;
    background: var(--surface-color);
    border: 1px solid var(--border-color);
    border-radius: 6px;
    text-align: center;
    font-weight: 500;
    color: var(--text-color);
    transition: all 0.3s ease;
  }

  .flex-item:hover {
    background: var(--surface-color);
    border-color: var(--primary-color);
    transform: translateY(-1px);
  }

  /* Responsive */
  @media (max-width: 768px) {
    .grid-cols-3 { grid-template-columns: repeat(2, 1fr); }
    .grid-cols-4 { grid-template-columns: repeat(2, 1fr); }
    .grid-cols-6 { grid-template-columns: repeat(3, 1fr); }
    
    .grid-responsive {
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    }
    
    .flex-between {
      flex-direction: column;
      gap: 1rem;
      align-items: stretch;
    }

    .grids-showcase {
      gap: 2rem;
    }
  }

  @media (max-width: 480px) {
    .grid-cols-2 { grid-template-columns: 1fr; }
    .grid-cols-3 { grid-template-columns: 1fr; }
    .grid-cols-4 { grid-template-columns: 1fr; }
    .grid-cols-6 { grid-template-columns: repeat(2, 1fr); }
    
    .grid-responsive {
      grid-template-columns: 1fr;
    }
    
    .gap-6 { gap: 1rem; }
    .gap-8 { gap: 1.5rem; }

    .component-preview {
      padding: 1.5rem;
    }

    .grids-showcase {
      gap: 1.5rem;
    }
  }
</style>
