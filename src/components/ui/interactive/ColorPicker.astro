---
import CodeViewer from '../../util/CodeViewer.astro';
import '../../../styles/card-base.css';

const code = `
<!-- Color Picker Básico -->
<div class="color-picker-container">
  <label class="color-label">Color favorito:</label>
  <div class="color-picker-wrapper">
    <input type="color" id="color-basic" class="color-input" value="#3b82f6" onchange="updateColorDisplay('color-basic', 'color-display-1')">
    <div class="color-display" id="color-display-1" style="background-color: #3b82f6;"></div>
    <span class="color-value" id="color-value-1">#3b82f6</span>
  </div>
</div>

<!-- Color Picker con Paleta -->
<div class="color-picker-container palette">
  <label class="color-label">Seleccionar de paleta:</label>
  <div class="color-palette">
    <div class="color-swatch" style="background: #ef4444;" onclick="selectPaletteColor('#ef4444', 'palette-display')"></div>
    <div class="color-swatch" style="background: #f59e0b;" onclick="selectPaletteColor('#f59e0b', 'palette-display')"></div>
    <div class="color-swatch" style="background: #10b981;" onclick="selectPaletteColor('#10b981', 'palette-display')"></div>
    <div class="color-swatch" style="background: #3b82f6;" onclick="selectPaletteColor('#3b82f6', 'palette-display')"></div>
    <div class="color-swatch" style="background: #8b5cf6;" onclick="selectPaletteColor('#8b5cf6', 'palette-display')"></div>
    <div class="color-swatch" style="background: #ec4899;" onclick="selectPaletteColor('#ec4899', 'palette-display')"></div>
  </div>
  <div class="selected-color">
    <div class="color-display large" id="palette-display" style="background-color: #3b82f6;"></div>
    <span class="color-value" id="palette-value">#3b82f6</span>
  </div>
</div>

<style>
  .color-picker-container {
    margin: 1.5rem 0;
    padding: 1.5rem;
    background: var(--surface-color);
    border-radius: 12px;
    border: 1px solid var(--border-color);
  }

  .color-label {
    display: block;
    margin-bottom: 1rem;
    font-weight: 600;
    color: var(--text-color);
    font-size: 0.9rem;
  }

  .color-picker-wrapper {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .color-input {
    width: 60px;
    height: 40px;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    background: none;
  }

  .color-display {
    width: 40px;
    height: 40px;
    border-radius: 8px;
    border: 2px solid var(--border-color);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease;
  }

  .color-display:hover {
    transform: scale(1.1);
  }

  .color-display.large {
    width: 80px;
    height: 80px;
    border-radius: 12px;
  }

  .color-value {
    font-family: monospace;
    font-weight: 600;
    color: var(--text-color);
    background: var(--background-color);
    padding: 0.5rem 0.75rem;
    border-radius: 6px;
    border: 1px solid var(--border-color);
    font-size: 0.85rem;
  }

  .color-palette {
    display: grid;
    grid-template-columns: repeat(6, 1fr);
    gap: 0.75rem;
    margin-bottom: 1.5rem;
  }

  .color-swatch {
    width: 50px;
    height: 50px;
    border-radius: 10px;
    cursor: pointer;
    transition: all 0.3s ease;
    border: 3px solid transparent;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }

  .color-swatch:hover {
    transform: translateY(-4px) scale(1.1);
    border-color: white;
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
  }

  .color-swatch.selected {
    border-color: var(--text-color);
    transform: scale(1.1);
  }

  .selected-color {
    display: flex;
    align-items: center;
    gap: 1.5rem;
    padding: 1rem;
    background: var(--background-color);
    border-radius: 10px;
    border: 1px solid var(--border-color);
  }
</style>

<script>
function updateColorDisplay(inputId, displayId) {
  const input = document.getElementById(inputId);
  const display = document.getElementById(displayId);
  const valueSpan = display.parentElement.querySelector('.color-value');
  
  display.style.backgroundColor = input.value;
  if (valueSpan) {
    valueSpan.textContent = input.value;
  }
}

function selectPaletteColor(color, displayId) {
  const display = document.getElementById(displayId);
  const valueSpan = document.getElementById('palette-value');
  
  display.style.backgroundColor = color;
  valueSpan.textContent = color;
  
  // Actualizar selección visual
  const swatches = document.querySelectorAll('.color-swatch');
  swatches.forEach(swatch => swatch.classList.remove('selected'));
  event.target.classList.add('selected');
}
</script>
`;
---

<div class="component-preview">
  <h3>Color Picker Components</h3>
  <p>Selectores de color modernos con paletas predefinidas, preview y formato hexadecimal.</p>
  
  <div class="demo-container">
    <div class="color-picker-showcase">
      
      <div class="color-picker-section">
        <h4>Color Picker Básico</h4>
        <div class="color-picker-container">
          <label class="color-label">Seleccionar color:</label>
          <div class="color-picker-wrapper">
            <input type="color" id="color-basic" class="color-input" value="#3b82f6" onchange="updateColorDisplay('color-basic', 'color-display-1', 'color-value-1')">
            <div class="color-display" id="color-display-1" style="background-color: #3b82f6;"></div>
            <span class="color-value" id="color-value-1">#3b82f6</span>
          </div>
        </div>
      </div>

      <div class="color-picker-section">
        <h4>Paleta de Colores</h4>
        <div class="color-picker-container palette">
          <label class="color-label">Seleccionar de paleta:</label>
          <div class="color-palette">
            <div class="color-swatch" style="background: #ef4444;" onclick="selectPaletteColor('#ef4444', 'palette-display', 'palette-value')" title="Rojo"></div>
            <div class="color-swatch" style="background: #f59e0b;" onclick="selectPaletteColor('#f59e0b', 'palette-display', 'palette-value')" title="Naranja"></div>
            <div class="color-swatch" style="background: #10b981;" onclick="selectPaletteColor('#10b981', 'palette-display', 'palette-value')" title="Verde"></div>
            <div class="color-swatch selected" style="background: #3b82f6;" onclick="selectPaletteColor('#3b82f6', 'palette-display', 'palette-value')" title="Azul"></div>
            <div class="color-swatch" style="background: #8b5cf6;" onclick="selectPaletteColor('#8b5cf6', 'palette-display', 'palette-value')" title="Púrpura"></div>
            <div class="color-swatch" style="background: #ec4899;" onclick="selectPaletteColor('#ec4899', 'palette-display', 'palette-value')" title="Rosa"></div>
          </div>
          <div class="selected-color">
            <div class="color-display large" id="palette-display" style="background-color: #3b82f6;"></div>
            <div class="color-info">
              <span class="color-value" id="palette-value">#3b82f6</span>
              <span class="color-name" id="palette-name">Azul</span>
            </div>
          </div>
        </div>
      </div>

      <div class="color-picker-section">
        <h4>Paleta de Grises</h4>
        <div class="color-picker-container grayscale">
          <label class="color-label">Escala de grises:</label>
          <div class="grayscale-palette">
            <div class="color-swatch" style="background: #000000;" onclick="selectPaletteColor('#000000', 'gray-display', 'gray-value')" title="Negro"></div>
            <div class="color-swatch" style="background: #374151;" onclick="selectPaletteColor('#374151', 'gray-display', 'gray-value')" title="Gris Oscuro"></div>
            <div class="color-swatch" style="background: #6b7280;" onclick="selectPaletteColor('#6b7280', 'gray-display', 'gray-value')" title="Gris"></div>
            <div class="color-swatch" style="background: #9ca3af;" onclick="selectPaletteColor('#9ca3af', 'gray-display', 'gray-value')" title="Gris Claro"></div>
            <div class="color-swatch" style="background: #d1d5db;" onclick="selectPaletteColor('#d1d5db', 'gray-display', 'gray-value')" title="Gris Muy Claro"></div>
            <div class="color-swatch" style="background: #ffffff; border: 2px solid #e5e7eb;" onclick="selectPaletteColor('#ffffff', 'gray-display', 'gray-value')" title="Blanco"></div>
          </div>
          <div class="selected-color">
            <div class="color-display large" id="gray-display" style="background-color: #6b7280;"></div>
            <span class="color-value" id="gray-value">#6b7280</span>
          </div>
        </div>
      </div>

      <div class="color-picker-section">
        <h4>Color Picker Avanzado</h4>
        <div class="color-picker-container advanced">
          <label class="color-label">Color personalizado:</label>
          <div class="advanced-picker">
            <div class="color-controls">
              <input type="color" id="color-advanced" class="color-input advanced" value="#8b5cf6" onchange="updateAdvancedColor()">
              <div class="color-sliders">
                <div class="slider-group">
                  <label>Saturación: <span id="saturation-value">100</span>%</label>
                  <input type="range" id="saturation-slider" min="0" max="100" value="100" oninput="updateAdvancedColor()">
                </div>
                <div class="slider-group">
                  <label>Brillo: <span id="brightness-value">75</span>%</label>
                  <input type="range" id="brightness-slider" min="0" max="100" value="75" oninput="updateAdvancedColor()">
                </div>
              </div>
            </div>
            <div class="color-preview">
              <div class="color-display extra-large" id="advanced-display" style="background-color: #8b5cf6;"></div>
              <div class="color-details">
                <span class="color-value" id="advanced-value">#8b5cf6</span>
                <span class="color-rgb" id="advanced-rgb">rgb(139, 92, 246)</span>
              </div>
            </div>
          </div>
        </div>
      </div>

    </div>
  </div>
</div>

<CodeViewer code={code} />

<script is:inline>
function updateColorDisplay(inputId, displayId, valueId) {
  const input = document.getElementById(inputId);
  const display = document.getElementById(displayId);
  const valueSpan = document.getElementById(valueId);
  
  display.style.backgroundColor = input.value;
  if (valueSpan) {
    valueSpan.textContent = input.value;
  }
}

function selectPaletteColor(color, displayId, valueId) {
  const display = document.getElementById(displayId);
  const valueSpan = document.getElementById(valueId);
  
  display.style.backgroundColor = color;
  valueSpan.textContent = color;
  
  // Actualizar selección visual
  const container = display.closest('.color-picker-container');
  const swatches = container.querySelectorAll('.color-swatch');
  swatches.forEach(swatch => swatch.classList.remove('selected'));
  event.target.classList.add('selected');
  
  // Actualizar nombre del color si existe
  const nameSpan = document.getElementById('palette-name');
  if (nameSpan) {
    const colorNames = {
      '#ef4444': 'Rojo',
      '#f59e0b': 'Naranja', 
      '#10b981': 'Verde',
      '#3b82f6': 'Azul',
      '#8b5cf6': 'Púrpura',
      '#ec4899': 'Rosa'
    };
    nameSpan.textContent = colorNames[color] || 'Color personalizado';
  }
}

function updateAdvancedColor() {
  const colorInput = document.getElementById('color-advanced');
  const saturationSlider = document.getElementById('saturation-slider');
  const brightnessSlider = document.getElementById('brightness-slider');
  const display = document.getElementById('advanced-display');
  const valueSpan = document.getElementById('advanced-value');
  const rgbSpan = document.getElementById('advanced-rgb');
  const saturationValue = document.getElementById('saturation-value');
  const brightnessValue = document.getElementById('brightness-value');
  
  // Actualizar valores mostrados
  saturationValue.textContent = saturationSlider.value;
  brightnessValue.textContent = brightnessSlider.value;
  
  // Convertir color base y aplicar filtros
  const baseColor = colorInput.value;
  const saturation = saturationSlider.value / 100;
  const brightness = brightnessSlider.value / 100;
  
  // Aplicar filtros CSS para simular cambios de saturación y brillo
  display.style.backgroundColor = baseColor;
  display.style.filter = `saturate(${saturation}) brightness(${brightness})`;
  
  valueSpan.textContent = baseColor;
  
  // Convertir hex a RGB para mostrar
  const rgb = hexToRgb(baseColor);
  if (rgb) {
    rgbSpan.textContent = `rgb(${Math.round(rgb.r * brightness)}, ${Math.round(rgb.g * brightness)}, ${Math.round(rgb.b * brightness)})`;
  }
}

function hexToRgb(hex) {
  const result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
  return result ? {
    r: parseInt(result[1], 16),
    g: parseInt(result[2], 16),
    b: parseInt(result[3], 16)
  } : null;
}

// Inicializar color avanzado
document.addEventListener('DOMContentLoaded', function() {
  updateAdvancedColor();
});

// Make functions globally available
window.updateColorDisplay = updateColorDisplay;
window.selectPaletteColor = selectPaletteColor;
window.updateAdvancedColor = updateAdvancedColor;
window.hexToRgb = hexToRgb;
</script>

<style is:global>
  .color-picker-container {
    margin: 1.5rem 0;
    padding: 1.5rem;
    background: var(--surface-color);
    border-radius: 12px;
    border: 1px solid var(--border-color);
    transition: all 0.3s ease;
  }

  .color-picker-container:hover {
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    transform: translateY(-2px);
  }

  .color-label {
    display: block;
    margin-bottom: 1rem;
    font-weight: 600;
    color: var(--text-color);
    font-size: 0.9rem;
  }

  .color-picker-wrapper {
    display: flex;
    align-items: center;
    gap: 1rem;
    flex-wrap: wrap;
  }

  .color-input {
    width: 60px;
    height: 40px;
    border: 2px solid var(--border-color);
    border-radius: 10px;
    cursor: pointer;
    background: none;
    transition: all 0.3s ease;
  }

  .color-input:hover {
    border-color: var(--primary-color);
    box-shadow: 0 0 0 3px rgba(var(--primary-color-rgb, 59, 130, 246), 0.1);
  }

  .color-input.advanced {
    width: 80px;
    height: 60px;
    border-radius: 12px;
  }

  .color-display {
    width: 40px;
    height: 40px;
    border-radius: 10px;
    border: 2px solid var(--border-color);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    overflow: hidden;
  }

  .color-display::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(45deg, #f0f0f0 25%, transparent 25%), 
                linear-gradient(-45deg, #f0f0f0 25%, transparent 25%), 
                linear-gradient(45deg, transparent 75%, #f0f0f0 75%), 
                linear-gradient(-45deg, transparent 75%, #f0f0f0 75%);
    background-size: 10px 10px;
    background-position: 0 0, 0 5px, 5px -5px, -5px 0px;
    z-index: -1;
  }

  .color-display:hover {
    transform: scale(1.1);
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.2);
  }

  .color-display.large {
    width: 80px;
    height: 80px;
    border-radius: 16px;
  }

  .color-display.extra-large {
    width: 120px;
    height: 120px;
    border-radius: 20px;
  }

  .color-value {
    font-family: 'Courier New', monospace;
    font-weight: 600;
    color: var(--text-color);
    background: var(--background-color);
    padding: 0.5rem 0.75rem;
    border-radius: 8px;
    border: 1px solid var(--border-color);
    font-size: 0.85rem;
    user-select: all;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .color-value:hover {
    background: var(--primary-color);
    color: white;
    transform: translateY(-1px);
  }

  .color-rgb {
    font-family: 'Courier New', monospace;
    font-size: 0.8rem;
    color: var(--text-secondary);
    background: var(--surface-secondary);
    padding: 0.25rem 0.5rem;
    border-radius: 6px;
    display: block;
    margin-top: 0.5rem;
    user-select: all;
    cursor: pointer;
  }

  .color-name {
    font-size: 0.85rem;
    color: var(--text-secondary);
    font-style: italic;
    display: block;
    margin-top: 0.25rem;
  }

  .color-palette,
  .grayscale-palette {
    display: grid;
    grid-template-columns: repeat(6, 1fr);
    gap: 0.75rem;
    margin-bottom: 1.5rem;
  }

  .color-swatch {
    width: 50px;
    height: 50px;
    border-radius: 12px;
    cursor: pointer;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    border: 3px solid transparent;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    position: relative;
    overflow: hidden;
  }

  .color-swatch::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(45deg, #f0f0f0 25%, transparent 25%), 
                linear-gradient(-45deg, #f0f0f0 25%, transparent 25%), 
                linear-gradient(45deg, transparent 75%, #f0f0f0 75%), 
                linear-gradient(-45deg, transparent 75%, #f0f0f0 75%);
    background-size: 8px 8px;
    background-position: 0 0, 0 4px, 4px -4px, -4px 0px;
    z-index: -1;
  }

  .color-swatch:hover {
    transform: translateY(-4px) scale(1.1);
    border-color: var(--text-color);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
  }

  .color-swatch.selected {
    border-color: var(--primary-color);
    transform: scale(1.1);
    box-shadow: 0 0 0 2px var(--primary-color);
  }

  .selected-color {
    display: flex;
    align-items: center;
    gap: 1.5rem;
    padding: 1.5rem;
    background: var(--background-color);
    border-radius: 12px;
    border: 1px solid var(--border-color);
  }

  .color-info {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .color-details {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  /* Advanced Color Picker */
  .advanced-picker {
    display: flex;
    gap: 2rem;
    align-items: flex-start;
  }

  .color-controls {
    flex: 1;
  }

  .color-sliders {
    margin-top: 1rem;
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .slider-group {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .slider-group label {
    font-size: 0.85rem;
    color: var(--text-color);
    font-weight: 500;
  }

  .slider-group input[type="range"] {
    width: 100%;
    height: 6px;
    border-radius: 3px;
    background: var(--border-color);
    outline: none;
    appearance: none;
    cursor: pointer;
  }

  .slider-group input[type="range"]::-webkit-slider-thumb {
    appearance: none;
    width: 18px;
    height: 18px;
    border-radius: 50%;
    background: var(--primary-color);
    cursor: pointer;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
  }

  .color-preview {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
  }

  /* Color Picker Showcase Layout */
  .color-picker-showcase {
    width: 100%;
    max-width: 800px;
  }

  .color-picker-section {
    margin-bottom: 3rem;
  }

  .color-picker-section h4 {
    margin: 0 0 1.5rem 0;
    color: var(--text-color);
    font-size: 1.1rem;
    font-weight: 600;
    padding-left: 0.5rem;
    border-left: 3px solid var(--primary-color);
  }

  /* Component Preview Styles */
  .component-preview {
    padding: 2rem 1rem;
    border: 1px solid var(--border-color);
    border-radius: 16px;
    background: linear-gradient(135deg, var(--background-color) 0%, var(--surface-color) 100%);
    transition: all 0.3s ease;
  }

  .component-preview h3 {
    margin: 0 0 0.5rem 0;
    color: var(--text-color);
    font-size: 1.5rem;
    font-weight: 700;
    text-align: center;
    background: linear-gradient(135deg, var(--text-color), var(--primary-color));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .component-preview p {
    margin: 0 0 1.5rem 0;
    color: var(--text-secondary);
    line-height: 1.6;
    text-align: center;
    font-size: 1rem;
  }

  .demo-container {
    display: flex;
    justify-content: center;
    align-items: flex-start;
    min-height: 600px;
  }

  /* Responsive */
  @media (max-width: 768px) {
    .color-palette,
    .grayscale-palette {
      grid-template-columns: repeat(3, 1fr);
    }

    .color-swatch {
      width: 60px;
      height: 60px;
    }

    .advanced-picker {
      flex-direction: column;
      gap: 1.5rem;
    }

    .selected-color {
      flex-direction: column;
      text-align: center;
      gap: 1rem;
    }

    .color-picker-section h4 {
      text-align: center;
      border-left: none;
      border-bottom: 3px solid var(--primary-color);
      padding-left: 0;
      padding-bottom: 0.5rem;
    }
  }

  @media (max-width: 480px) {
    .color-palette,
    .grayscale-palette {
      grid-template-columns: repeat(3, 1fr);
      gap: 0.5rem;
    }

    .color-swatch {
      width: 50px;
      height: 50px;
    }

    .color-picker-wrapper {
      justify-content: center;
    }

    .color-display.extra-large {
      width: 100px;
      height: 100px;
    }
  }
</style>
